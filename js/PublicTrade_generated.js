// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var reactivemarkets = reactivemarkets || {};

/**
 * @const
 * @namespace
 */
reactivemarkets.papi = reactivemarkets.papi || {};

/**
 * @constructor
 */
reactivemarkets.papi.PublicTrade = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {reactivemarkets.papi.PublicTrade}
 */
reactivemarkets.papi.PublicTrade.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {reactivemarkets.papi.PublicTrade=} obj
 * @returns {reactivemarkets.papi.PublicTrade}
 */
reactivemarkets.papi.PublicTrade.getRootAsPublicTrade = function(bb, obj) {
  return (obj || new reactivemarkets.papi.PublicTrade).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {reactivemarkets.papi.PublicTrade=} obj
 * @returns {reactivemarkets.papi.PublicTrade}
 */
reactivemarkets.papi.PublicTrade.getSizePrefixedRootAsPublicTrade = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new reactivemarkets.papi.PublicTrade).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
reactivemarkets.papi.PublicTrade.prototype.sourceTs = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
reactivemarkets.papi.PublicTrade.prototype.source = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
reactivemarkets.papi.PublicTrade.prototype.market = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
reactivemarkets.papi.PublicTrade.prototype.feedId = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
reactivemarkets.papi.PublicTrade.prototype.tradeId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
reactivemarkets.papi.PublicTrade.prototype.flags = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {reactivemarkets.papi.Side}
 */
reactivemarkets.papi.PublicTrade.prototype.side = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? /** @type {reactivemarkets.papi.Side} */ (this.bb.readInt8(this.bb_pos + offset)) : reactivemarkets.papi.Side.None;
};

/**
 * @returns {number}
 */
reactivemarkets.papi.PublicTrade.prototype.qty = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
reactivemarkets.papi.PublicTrade.prototype.price = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
reactivemarkets.papi.PublicTrade.prototype.execVenue = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
reactivemarkets.papi.PublicTrade.startPublicTrade = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} sourceTs
 */
reactivemarkets.papi.PublicTrade.addSourceTs = function(builder, sourceTs) {
  builder.addFieldInt64(0, sourceTs, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sourceOffset
 */
reactivemarkets.papi.PublicTrade.addSource = function(builder, sourceOffset) {
  builder.addFieldOffset(1, sourceOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} marketOffset
 */
reactivemarkets.papi.PublicTrade.addMarket = function(builder, marketOffset) {
  builder.addFieldOffset(2, marketOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} feedId
 */
reactivemarkets.papi.PublicTrade.addFeedId = function(builder, feedId) {
  builder.addFieldInt32(3, feedId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tradeIdOffset
 */
reactivemarkets.papi.PublicTrade.addTradeId = function(builder, tradeIdOffset) {
  builder.addFieldOffset(4, tradeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} flags
 */
reactivemarkets.papi.PublicTrade.addFlags = function(builder, flags) {
  builder.addFieldInt16(5, flags, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {reactivemarkets.papi.Side} side
 */
reactivemarkets.papi.PublicTrade.addSide = function(builder, side) {
  builder.addFieldInt8(6, side, reactivemarkets.papi.Side.None);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} qty
 */
reactivemarkets.papi.PublicTrade.addQty = function(builder, qty) {
  builder.addFieldFloat64(7, qty, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} price
 */
reactivemarkets.papi.PublicTrade.addPrice = function(builder, price) {
  builder.addFieldFloat64(8, price, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} execVenueOffset
 */
reactivemarkets.papi.PublicTrade.addExecVenue = function(builder, execVenueOffset) {
  builder.addFieldOffset(9, execVenueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
reactivemarkets.papi.PublicTrade.endPublicTrade = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 8); // market
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} sourceTs
 * @param {flatbuffers.Offset} sourceOffset
 * @param {flatbuffers.Offset} marketOffset
 * @param {number} feedId
 * @param {flatbuffers.Offset} tradeIdOffset
 * @param {number} flags
 * @param {NS10566075735762053212.reactivemarkets.papi.Side} side
 * @param {number} qty
 * @param {number} price
 * @param {flatbuffers.Offset} execVenueOffset
 * @returns {flatbuffers.Offset}
 */
reactivemarkets.papi.PublicTrade.createPublicTrade = function(builder, sourceTs, sourceOffset, marketOffset, feedId, tradeIdOffset, flags, side, qty, price, execVenueOffset) {
  reactivemarkets.papi.PublicTrade.startPublicTrade(builder);
  reactivemarkets.papi.PublicTrade.addSourceTs(builder, sourceTs);
  reactivemarkets.papi.PublicTrade.addSource(builder, sourceOffset);
  reactivemarkets.papi.PublicTrade.addMarket(builder, marketOffset);
  reactivemarkets.papi.PublicTrade.addFeedId(builder, feedId);
  reactivemarkets.papi.PublicTrade.addTradeId(builder, tradeIdOffset);
  reactivemarkets.papi.PublicTrade.addFlags(builder, flags);
  reactivemarkets.papi.PublicTrade.addSide(builder, side);
  reactivemarkets.papi.PublicTrade.addQty(builder, qty);
  reactivemarkets.papi.PublicTrade.addPrice(builder, price);
  reactivemarkets.papi.PublicTrade.addExecVenue(builder, execVenueOffset);
  return reactivemarkets.papi.PublicTrade.endPublicTrade(builder);
}

// Exports for Node.js and RequireJS
this.reactivemarkets = reactivemarkets;

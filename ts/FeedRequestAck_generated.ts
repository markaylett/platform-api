// automatically generated by the FlatBuffers compiler, do not modify

import { flatbuffers } from "./flatbuffers"
/**
 * @constructor
 */
export namespace reactivemarkets.papi{
export class FeedRequestAck {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns FeedRequestAck
 */
__init(i:number, bb:flatbuffers.ByteBuffer):FeedRequestAck {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequestAck= obj
 * @returns FeedRequestAck
 */
static getRootAsFeedRequestAck(bb:flatbuffers.ByteBuffer, obj?:FeedRequestAck):FeedRequestAck {
  return (obj || new FeedRequestAck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequestAck= obj
 * @returns FeedRequestAck
 */
static getSizePrefixedRootAsFeedRequestAck(bb:flatbuffers.ByteBuffer, obj?:FeedRequestAck):FeedRequestAck {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FeedRequestAck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
reqId():string|null
reqId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
reqId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
feedId():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFeedRequestAck(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset reqIdOffset
 */
static addReqId(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, reqIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number feedId
 */
static addFeedId(builder:flatbuffers.Builder, feedId:number) {
  builder.addFieldInt32(1, feedId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFeedRequestAck(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createFeedRequestAck(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset, feedId:number):flatbuffers.Offset {
  FeedRequestAck.startFeedRequestAck(builder);
  FeedRequestAck.addReqId(builder, reqIdOffset);
  FeedRequestAck.addFeedId(builder, feedId);
  return FeedRequestAck.endFeedRequestAck(builder);
}
}
}
